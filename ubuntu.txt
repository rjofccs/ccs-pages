#################################################
node01:sed 's/192.168.32.10/192.168.32.11/' /etc/sysconfig/network-scripts/ifcfg-ens33 -i
echo 'root:uw'|chpasswd
https://www.17ce.com/
atlanta:

apt-get install -y openssh-server
ssh-server配置文件位于/etc/ssh/sshd_config，
在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。
（或把配置文件中的”PermitRootLogin without-password”加一个”#”号,把它注释掉，
再增加一句”PermitRootLogin yes”）
/etc/init.d/ssh start或service ssh start

https://github.com/coder/code-server/releases
wget https://github.com/coder/code-server/releases/download/v4.8.0/code-server-4.8.0-linux-amd64.tar.gz
tar -zxvf code-server-4.8.0-linux-amd64.tar.gz
cd code-server-4.8.0-linux-amd64

vim /etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
/etc/init.d/networking restart

docker-compose up -d

root  /usr/share/nginx/html;
autoindex  on;
set $node_port 1080;
proxy_pass http://120.78.191.195:$node_port$request_uri;
proxy_redirect off;

apt-get install -y python3-pip
apt-get install -y ffmpeg
apt-get install -y tree
ffmpeg -decoders && ffmpeg -version
wget https://raw.githubusercontent.com/rjofccs/ccs-pages/master/action_py_rs/test.py
pip3 install requests
pip3 install arrow
pip3 install lxml
pip3 install PyMySQL
pip3 install you-get

cd /usr/local/www/html
you-get 'https://www.youtube.com/watch?v=fhIrySD7SXo' -O test
ffmpeg -i test.mp4 -f mp3 -vn test.mp3

apt -y install nodejs && node -v && apt -y install npm
#################################################
apt-get -y install openjdk-8-jdk && java -version
apt -y install maven && mvn -version
wget https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.7.4/spring-boot-cli-2.7.4-bin.tar.gz
tar -zxvf spring-boot-cli-2.7.4-bin.tar.gz
SPRING_HOME="$(pwd)/spring-2.7.4/" && PATH=$PATH:$SPRING_HOME/bin
echo $SPRING_HOME && echo $PATH
java -version && spring --version
cd /usr/local/mycode-server/config/workspace
spring init --dependencies=web,data-jpa --java-version=1.8 my-project
chmod -R 777 /usr/local/mycode-server/config/workspace
#################################################
docker pull lscr.io/linuxserver/code-server:latest
mkdir -p /usr/local/mycode-server/config
docker run --name mycodeserver \
-e PUID=1000 \
-e PGID=1000 \
-e TZ=Europe/London \
-p 8443:8443 \
-p 8080:8080 \
-v /usr/local/mycode-server/config:/config \
--restart unless-stopped \
-d lscr.io/linuxserver/code-server:latest

ls /usr/local/mycode-server/config/workspace
#################################################
curl -sSL https://get.daocloud.io/docker | sh
systemctl daemon-reload && systemctl restart docker
#################################################
docker pull nginx:latest
mkdir -p /usr/local/www/config
tee /usr/local/www/config/nginx.conf <<-'EOF'
user root;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    #default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        location / {
            root  /usr/share/nginx/html;
            autoindex  on;
        }
    }
}
EOF
docker rm -f mynginx
docker run --name mynginx -p 80:80 \
--restart always \
-v /usr/local/www/html:/usr/share/nginx/html \
-v /usr/local/www/config:/etc/nginx \
-d nginx
docker ps
docker exec -it mynginx sh
docker logs mynginx
#################################################
docker pull mysql
mkdir -p /usr/local/mysql/{conf,logs,data}

docker run -p 3306:3306 --name mymysql \
-v /usr/local/mysql/conf:/etc/mysql/mysql.conf.d \
-e MYSQL_ROOT_PASSWORD=S1234567 \
-d mysql
#################################################
docker pull nextcloud:latest
mkdir -p /usr/local/nextcloud
docker run -d -p 80:80  --name mynextcloud  \
-v /usr/local/nextcloud/:/var/www/html/ \
--restart=always --privileged=true nextcloud
admin/admin
#################################################
docker pull fauria/vsftpd
docker run -d -p 20:20 -p 21:21 -p 21100-21110:21100-21110 \
-v /root/aria2/downloads:/home/vsftpd \
-e FTP_USER=admin \
-e FTP_PASS=adminadmin \
-e PASV_ADDRESS=192.168.0.101 \
-e PASV_MIN_PORT=21100 \
-e PASV_MAX_PORT=21110 \
--name vsftpd \
--restart=always \
fauria/vsftpd
docker exec -i -t vsftpd bash
#################################################
docker run -it --rm \
-v /root/ssl/etc/letsencrypt:/etc/letsencrypt \
-v /root/ssl/var/lib/letsencrypt:/var/lib/letsencrypt \
-v /root/ssl/var/log/letsencrypt:/var/log/letsencrypt \
-v /root/ssl/certbot:/data/letsencrypt \
certbot/certbot \
renew --webroot \
--webroot-path=/data/letsencrypt
#################################################
docker pull mongo:4.0
docker run --name mymongo -d mongo:4.0 --smallfiles --replSet rs0 --oplogSize 128
docker exec -ti mymongo mongo --eval "printjson(rs.initiate())"
docker rm mymongo -f
#################################################
